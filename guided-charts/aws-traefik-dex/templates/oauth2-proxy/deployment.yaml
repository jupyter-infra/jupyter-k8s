apiVersion: apps/v1
kind: Deployment
metadata:
  name: oauth2-proxy
  namespace: {{ .Values.namespace }}
  labels:
    app: oauth2-proxy
    component: auth
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oauth2-proxy
      component: auth
  template:
    metadata:
      labels:
        app: oauth2-proxy
        component: auth
    spec:
      serviceAccountName: oauth2-proxy
      initContainers:
      - name: wait-for-dex
        image: busybox:latest
        imagePullPolicy: IfNotPresent
        command:
        - sh
        - -c
        - |
          echo "Waiting for Dex service to be available..."
          timeout={{ .Values.oauth2Proxy.dexCheck.timeout_seconds }}  # Timeout in seconds
          counter=0
          interval=5
          until wget -q --no-check-certificate -O - http://dex.jupyter-k8s-router:5556/dex/healthz > /dev/null 2>&1; do
            echo "Dex service is not yet available, retrying in ${interval}s... (${counter}/${timeout}s)"
            sleep $interval
            counter=$((counter + interval))
            if [ $counter -ge $timeout ]; then
              echo "Timeout after ${timeout}s waiting for Dex service. Continuing anyway..."
              break
            fi
          done
          echo "Dex service is available or timeout reached!"
      containers:
      - name: oauth2-proxy
        image: quay.io/oauth2-proxy/oauth2-proxy:latest
        args:
        - --provider=oidc
        - --provider-display-name=GitHub
        - --client-id={{ .Values.dex.oauth2ProxyClientId }}
        - --client-secret={{ .Values.dex.oauth2ProxyClientSecret }}
        - --cookie-secret=$(COOKIE_SECRET)
        - --email-domain=*
        - --upstream=static://202
        - --reverse-proxy=true
        - --http-address=0.0.0.0:4180
        - --redirect-url=https://{{ .Values.domain }}/oauth2/callback
        - --oidc-issuer-url=https://{{ .Values.domain }}/dex
        - --ssl-insecure-skip-verify=true
        - --cookie-secure=true
        - --cookie-samesite=lax
        - --cookie-refresh=1h
        - --cookie-expire=8h
        - --cookie-domain={{ .Values.domain }}
        - --cookie-path=/
        - --session-store-type=cookie
        - --skip-provider-button=true
        - --set-xauthrequest=true
        - --pass-authorization-header=true
        - --pass-user-headers=true
        - --pass-access-token=true
        - --pass-basic-auth=true
        - --scope=openid profile email groups
        - --skip-auth-preflight
        - --silence-ping-logging=true
        - --whitelist-domain={{ .Values.domain }}
        - --allowed-group=*
        env:
        - name: COOKIE_SECRET
          valueFrom:
            secretKeyRef:
              name: oauth2-proxy-cookie
              key: cookie-secret
        ports:
        - name: http
          containerPort: 4180
        livenessProbe:
          httpGet:
            path: /ping
            port: 4180
          initialDelaySeconds: 5
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ping
            port: 4180
          initialDelaySeconds: 3
          periodSeconds: 5
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532